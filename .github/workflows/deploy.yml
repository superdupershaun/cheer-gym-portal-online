# This workflow will build a Node.js project and deploy it to GitHub Pages.

name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Clean build environment (remove node_modules and dist)
        run: |
          rm -rf node_modules
          rm -rf dist

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm install && npm run build # Run npm install again just before build for robustness

      # --- IMPORTANT: INLINE CSS (Robust) ---
      - name: Inline CSS into index.html
        run: |
          CSS_FILE_PATH=$(find dist/assets -name "index-*.css" | head -n 1) # Catches any hashed CSS file
          
          if [ -z "$CSS_FILE_PATH" ] && [ -f "dist/assets/style.css" ]; then
            CSS_FILE_PATH="dist/assets/style.css"
          fi

          if [ ! -f "$CSS_FILE_PATH" ] || [ ! -s "$CSS_FILE_PATH" ]; then
            echo "Error: CSS file ($CSS_FILE_PATH) not found or is empty after build."
            ls -R dist # List dist contents for debugging
            exit 1
          fi

          CSS_CONTENT=$(cat "$CSS_FILE_PATH")
          INDEX_HTML_PATH="dist/index.html"
          
          # 1. Remove all <link rel="stylesheet" ...> tags from index.html
          sed -i -E '/<link rel="stylesheet".*href=".*\.css"[^>]*>/d' "$INDEX_HTML_PATH"

          # 2. Insert the CSS content directly into a <style> tag before </head>
          awk -v css="$CSS_CONTENT" '
            /<\/head>/ {
              print "    <style>"
              print css
              print "    </style>"
            }
            { print }
          ' "$INDEX_HTML_PATH" > "${INDEX_HTML_PATH}.tmp" && mv "${INDEX_HTML_PATH}.tmp" "$INDEX_HTML_PATH"
          echo "CSS inlined into $INDEX_HTML_PATH."

      # --- IMPORTANT: FIX JS PATH IN INDEX.HTML ---
      - name: Fix JS Path in index.html
        run: |
          INDEX_HTML_PATH="dist/index.html"
          # This sed command assumes Vite generates a script tag like:
          # <script type="module" crossorigin src="/cheer-gym-portal-online/assets/index-HASH.js"></script>
          # We need to ensure the path starts with './' relative to the base URL
          sed -i -E 's|src="/cheer-gym-portal-online/assets/|src="./assets/|g' "$INDEX_HTML_PATH" || \
          sed -i -E 's|src="/src/main.jsx"|src="./src/main.jsx"|g' "$INDEX_HTML_PATH"

          echo "JS path fixed in $INDEX_HTML_PATH. Check the modified HTML:"
          cat "$INDEX_HTML_PATH" # Print the modified HTML for debugging
      # --- END NEW STEP ---

      - name: Upload production-ready build artifacts for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist # Specify the directory where your built files are located

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
